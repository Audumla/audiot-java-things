<!--
  ~ **********************************************************************
  ~  ORGANIZATION : audumla.net
  ~  More information about this project can be found at the following locations:
  ~  http://www.audumla.net/
  ~  http://audumla.googlecode.com/
  ~ **********************************************************************
  ~  Copyright (C) 2012 - 2013 Audumla.net
  ~  Licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ~  You may not use this file except in compliance with the License located at http://creativecommons.org/licenses/by-nc-nd/3.0/
  ~
  ~  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
  ~  "AS IS BASIS", WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and limitations under the License.
  -->

<div class="section">
<h2>Audumla Camel Scheduler</h2>

<p>The <b>eventScheduler:</b> component provides a drop in replacement for the default camel <a
            class="external-link"
            href="http://camel.apache.org/quartz2.html"
            rel="nofollow">Quartz2 eventScheduler</a>.
	It offers an extensible model for adding customized Triggers and Quartz schedulers and provides functions 
	to schedule based on astonomical and seasonal events.</p> <br/>

<p>The following functionality is available on top of the standard Camel Quartz2 component</p>
<ul>
    <li>Extension points for adding custom Quartz Trigger implementations</li>
    <li>Dynamic identification of Quartz Trigger implementations based on URI parameters</li>
    <li>Support for Astronomical event triggering such as Sun rise &amp; Sun set</li>
    <li>Support for seasonal event triggering such as the start of Summer and Winter Equinox</li>

</ul>
<p>Maven users will need to add the following dependency to their pom.xml for this component:</p>
<pre class="prettyprint"><![CDATA[
<dependency>
    <groupId>net.audumla.camel</groupId>
    <artifactId>eventScheduler</artifactId>
    <version>x.x.x</version>
</dependency>
]]></pre>


<p>The <b>eventScheduler:</b> component provides a scheduled delivery of messages using the <a
        class="external-link"
        href="http://www.quartz-eventScheduler.org/"
        rel="nofollow">Quartz Scheduler 2.x</a>. <br/>
    Each endpoint represents a different timer (in Quartz terms, a Trigger and JobDetail).</p>

<h3>Common Scheduler Options</h3>
The following options are available regardless of the type of trigger is chosen.<table>
    <tbody>
    <tr>
        <th colspan="1" rowspan="1"> Parameter</th>
        <th colspan="1" rowspan="1"> Default</th>
        <th colspan="1" rowspan="1"> Description</th>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">job.name</td>
        <td colspan="1" rowspan="1">null</td>
        <td colspan="1" rowspan="1"> Sets the job name.</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">stateful</td>
        <td colspan="1" rowspan="1">false</td>
        <td colspan="1" rowspan="1"> Uses a Quartz @PersistJobDataAfterExecution and
            @DisallowConcurrentExecution instead of the default job.
        </td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">deleteJob</td>
        <td colspan="1" rowspan="1">true</td>
        <td colspan="1" rowspan="1"> If set to true, then the trigger automatically deletes when the
            route stops. Else if set to false, it will remain in the eventScheduler. When set to false, it will also mean the user
            may reuse the pre-configured trigger with a camel Uri, just ensure the names match. You cannot have
            both deleteJob and pauseJob set to true.
        </td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">pauseJob</td>
        <td colspan="1" rowspan="1">false</td>
        <td colspan="1" rowspan="1"> If set to true, then the trigger automatically pauses when
            the route stops. Else if set to false, it will remain in the eventScheduler. When set to false, it will also mean the user
            may reuse the pre-configured trigger with camel Uri, just ensure the names match. Notice you cannot have
            both deleteJob and pauseJob set to true.
        </td>
    </tr>
    </tbody>
</table>
<p><b>URI Format</b></p>
<pre class="prettyprint"><![CDATA[
eventScheduler://timerName?options
eventScheduler://groupName/timerName?options
]]></pre>
<h3>Scheduler Types</h3>
<h4>Cron Scheduler Options</h4>

<p>The Cron eventScheduler follows the same conventions utilized by the default Camel Quartz2 eventScheduler</p>
<table>
    <tbody>
    <tr>
        <th colspan="1" rowspan="1"> Parameter</th>
        <th colspan="1" rowspan="1"> Default</th>
        <th colspan="1" rowspan="1"> Description</th>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">cron.expression</td>
        <td colspan="1" rowspan="1"><em>None</em></td>
        <td colspan="1" rowspan="1"> Specifies a cron expression. Can also be set by specifying a value for the parameter 'cron' as in the default Quartz2 camel component
        </td>
    </tr>
     </tbody>
</table>
    <p><b>URI Format</b></p>
<pre class="prettyprint"><![CDATA[
eventScheduler://groupName/timerName?cron.expression=expression
eventScheduler://timerName?cron.expression=expression
eventScheduler://timerName?cron=expression (Camel Quartz2 style)
]]></pre>

<h4>Simple Scheduler Options</h4>

<p>The Simple eventScheduler follows the same conventions utilized by the default Camel Quartz2 eventScheduler</p>
<table>
    <tbody>
    <tr>
        <th colspan="1" rowspan="1"> Parameter</th>
        <th colspan="1" rowspan="1"> Default</th>
        <th colspan="1" rowspan="1"> Description</th>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">trigger.repeatCount</td>
        <td colspan="1" rowspan="1">0</td>
        <td colspan="1" rowspan="1">How many times the timer will repeat (0 means the trigger will execute only once)</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">trigger.repeatInterval</td>
        <td colspan="1" rowspan="1">0</td>
        <td colspan="1" rowspan="1">The amount of time in milliseconds between repeated triggers</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">trigger.fireNow</td>
        <td colspan="1" rowspan="1">false</td>
        <td colspan="1" rowspan="1"> If it is true will fire the trigger when the route is
            start when using SimpleTrigger. Can also be set by specifying a value for the parameter 'firenow' as in the default Quartz2 camel component
        </td>
    </tr>
    </tbody>
</table>
<p><b>URI Format</b></p>
<pre class="prettyprint"><![CDATA[
eventScheduler://timerName?trigger.repeatCount=2&amp;trigger.repeatInterval=2000
eventScheduler://timerName?trigger.repeatInterval=3600000
]]></pre>


<h4>Celestial Scheduler Options</h4>

<p>The celestial eventScheduler allows triggering based on celestial object events such as sun rise and sun set</p>
<table>
    <tbody>
    <tr>
        <th colspan="1" rowspan="1"> Parameter</th>
        <th colspan="1" rowspan="1"> Default</th>
        <th colspan="1" rowspan="1"> Description</th>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.object</td>
        <td colspan="1" rowspan="1">sun</td>
        <td colspan="1" rowspan="1">The object that will be used to track the celestial event. Allowed values are currently restricted to 'sun'</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.event</td>
        <td colspan="1" rowspan="1">rise</td>
        <td colspan="1" rowspan="1">The celestial event that will cause the trigger to fire. Allowed values are currently restricted to 'rise' and 'set'</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.eventOffset</td>
        <td colspan="1" rowspan="1">0</td>
        <td colspan="1" rowspan="1">The offset in seconds from the given event. This can be negative or positive to allow times to be set that are relative to a given event, such as half an hour before sun rise</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.repeatInterval</td>
        <td colspan="1" rowspan="1">0</td>
        <td colspan="1" rowspan="1">The interval in seconds between each repeated trigger fired after the initial event has occurred. When this parameter is set without a value provided for 'repeatCount' then the trigger will repeat continuously with the given interval until the next event occurs </td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.repeatCount</td>
        <td colspan="1" rowspan="1">forever</td>
        <td colspan="1" rowspan="1">The number of times the trigger will repeat after the initial event has occurred. Repeats will only occur if 'celestial.interval' is greater than 0</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.endEvent</td>
        <td colspan="1" rowspan="1">none</td>
        <td colspan="1" rowspan="1">An optional parameter that specifies an event that will signal the end of repeat triggering. The trigger will still fire again on the next 'celestial.event' occurrence and repeat again with the specified interval until the next 'celestial.endEvent' is encountered</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.endEventOffset</td>
        <td colspan="1" rowspan="1">0</td>
        <td colspan="1" rowspan="1">The offset in seconds from the specified end event. This can be negative or positive to allow times to be set that are relative to a given event, such as half an hour after sun set</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.eventCount</td>
        <td colspan="1" rowspan="1">forever</td>
        <td colspan="1" rowspan="1">The number of events that will trigger for this schedule</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">celestial.inclination</td>
        <td colspan="1" rowspan="1">civil</td>
        <td colspan="1" rowspan="1">The inclination of the celestial object relative to the horizon. A decimal value can be assigned or any of the following set inclinations,
		<table>
			<tr>
				<td>civil</td>
				<td>-6 Degrees</td>
			</tr>
			<tr>
				<td>astronomical</td>
				<td>-18 Degrees</td>
			</tr>
			<tr>
				<td>nautical</td>
				<td>-12 Degrees</td>
			</tr>
			<tr>
				<td>official</td>
				<td>0.83333 Degrees</td>
			</tr>
		</table>
		</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">location</td>
        <td colspan="1" rowspan="1">none</td>
        <td colspan="1" rowspan="1">The latitude and longitude location on the earth to be used as the reference point to calculate the celestial events. The default latitude direction is North, the default longitude direction is E.
		<br/>
		<b>Format:</b>
		<p>
			latitude [<b>N</b>|S], longitude [<b>E</b>|W]
		</p>
		</td>
    </tr>
    </tbody>
</table>
<p><b>URI Format</b></p>
<pre class="prettyprint"><![CDATA[
eventScheduler://timerName?
eventScheduler://groupName/timerName?options
]]></pre>
<h4>Seasonal Scheduler Options</h4>

<p>The seasonal eventScheduler allows triggering based on seasonal events such as Winter Solstice and the start of Summer</p>
<table>
    <tbody>
    <tr>
        <th colspan="1" rowspan="1"> Parameter</th>
        <th colspan="1" rowspan="1"> Default</th>
        <th colspan="1" rowspan="1"> Description</th>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">seasonal.event</td>
        <td colspan="1" rowspan="1">none</td>
        <td colspan="1" rowspan="1">The seasonal event to trigger on. Allowed values are
		<ul>
			<li>wintersolstice</li> 
			<li>summersolstice</li> 
			<li>junesolstice</li> 
			<li>decembersolstice</li> 
			<li>autumnequinox</li> 
			<li>springequinox</li> 
			<li>septemberequinox</li> 
			<li>marchequinox</li>
			<li>summerstart</li> 
			<li>winterstart</li> 
			<li>springstart</li> 
			<li>autumnstart</li>
		</ul>
		</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">seasonal.eventCount</td>
        <td colspan="1" rowspan="1">forever</td>
        <td colspan="1" rowspan="1">The number of events that will trigger for this schedule</td>
    </tr>
    <tr>
        <td colspan="1" rowspan="1">location</td>
        <td colspan="1" rowspan="1">none</td>
        <td colspan="1" rowspan="1">The latitude and longitude location on the earth to be used as the reference point to calculate the celestial events. The default latitude direction is North, the default longitude direction is E.
		<br/>
		<b>Format:</b>
		<p>
			latitude [<b>N</b>|S], longitude [<b>E</b>|W]
		</p>
		</td>
    </tr>
    </tbody>
</table>
<p><b>URI Format</b></p>
<pre class="prettyprint"><![CDATA[
eventScheduler://timerName?
eventScheduler://groupName/timerName?options
]]></pre>

</div>
